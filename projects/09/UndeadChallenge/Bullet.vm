function Bullet.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push this 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.shootUp 1
pop temp 0
label IF_FALSE0
push this 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.shootDown 1
pop temp 0
label IF_FALSE1
push this 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Bullet.shootRight 1
pop temp 0
label IF_FALSE2
push this 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Bullet.shootLeft 1
pop temp 0
label IF_FALSE3
push pointer 0
return
function Bullet.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Bullet.move 0
push argument 0
pop pointer 0
push this 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.moveUp 1
pop temp 0
label IF_FALSE0
push this 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.moveDown 1
pop temp 0
label IF_FALSE1
push this 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Bullet.moveRight 1
pop temp 0
label IF_FALSE2
push this 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call Bullet.moveLeft 1
pop temp 0
label IF_FALSE3
push constant 0
return
function Bullet.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
call Bullet.drawUpOrDown 1
pop temp 0
label IF_FALSE0
push this 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push pointer 0
call Bullet.dispose 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Bullet.moveDown 0
push argument 0
pop pointer 0
push this 1
push constant 240
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
call Bullet.drawUpOrDown 1
pop temp 0
label IF_FALSE0
push this 1
push constant 240
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push pointer 0
call Bullet.dispose 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Bullet.moveRight 0
push argument 0
pop pointer 0
push this 0
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push this 0
push constant 1
add
pop this 0
push pointer 0
call Bullet.drawLeftOrRight 1
pop temp 0
label IF_FALSE0
push this 0
push constant 510
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push pointer 0
call Bullet.dispose 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Bullet.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push this 0
push constant 1
sub
pop this 0
push pointer 0
call Bullet.drawLeftOrRight 1
pop temp 0
label IF_FALSE0
push this 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Bullet.eraseBullet 1
pop temp 0
push pointer 0
call Bullet.dispose 1
pop temp 0
label IF_FALSE1
push constant 0
return
function Bullet.shootUp 0
push argument 0
pop pointer 0
push this 1
push constant 16
sub
pop this 1
push this 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.drawUpOrDown 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Bullet.shootDown 0
push argument 0
pop pointer 0
push this 1
push constant 16
add
pop this 1
push this 1
push constant 240
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.drawUpOrDown 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Bullet.shootRight 0
push argument 0
pop pointer 0
push this 0
push constant 16
add
pop this 0
push this 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.drawLeftOrRight 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Bullet.shootLeft 0
push argument 0
pop pointer 0
push this 0
push constant 16
sub
pop this 0
push this 0
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Bullet.drawLeftOrRight 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Bullet.drawLeftOrRight 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 32766
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.eraseBullet 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Bullet.drawUpOrDown 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 384
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
