class UndeadChallenge {
   field Hero hero;
   field Zombie zombie;
   field int heroDirection;

   constructor UndeadChallenge new() {
      let hero = Hero.new();
      let zombie = Zombie.new();
      return this;
   }

   method void dispose() {
      do hero.dispose();
      do zombie.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void itFollows() {
     if (hero.getXAxis() > zombie.getXAxis()) { do zombie.moveRight(); }
     if (hero.getXAxis() < zombie.getXAxis()) { do zombie.moveLeft(); }
     if (hero.getYAxis() > zombie.getYAxis()) { do zombie.moveDown(); }
     if (hero.getYAxis() < zombie.getYAxis()) { do zombie.moveUp(); }
     return;
   }

   method void moveHero() {
     if (heroDirection = 0) { return; }

     if (heroDirection = 1) { do hero.moveUp(); }
     if (heroDirection = 2) { do hero.moveDown(); }
     if (heroDirection = 3) { do hero.moveRight(); }
     if (heroDirection = 4) { do hero.moveLeft(); }
     let heroDirection = 0;

     return;
   }

   method void run() {
      var char key;
      var boolean exit;
      let exit = false;

      while (~exit) {
        // https://github.com/kmerenkov/galaxy/blob/master/source/GalaxyGame.jack
        let key = Keyboard.keyPressed();

         if (key = 0) { // 0 by default at the beginning of the program
           let heroDirection = 0;
           let key = Keyboard.keyPressed();
         }
         if (key = 131) {
           let heroDirection = 1;
           let key = Keyboard.keyPressed();
         }
         if (key = 133) {
           let heroDirection = 2;
           let key = Keyboard.keyPressed();
         }
         if (key = 132) {
           let heroDirection = 3;
           let key = Keyboard.keyPressed();
         }
         if (key = 130) {
           let heroDirection = 4;
           let key = Keyboard.keyPressed();
         }

         do moveHero();
         // do itFollows();
     } // while
     return;
   }
}
