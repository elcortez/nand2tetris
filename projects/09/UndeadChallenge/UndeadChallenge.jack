class UndeadChallenge {
   field Hero hero;
   field Array zombies;
   field Bullet bullet;
   field int heroDirection;
   field int heroLatestDirection; // useful to determine where the bullet will go;
   field int zombieFloatInterval;
   field int heroFloatInterval;
   field int bulletFloatInterval;
   field int shootInterval;
   field int totalZombiesCount;

   constructor UndeadChallenge new() {
     let totalZombiesCount = 1;
     let hero = Hero.new();
     do buildZombies();
     return this;
   }

   method void buildZombies() {
     var Zombie zombie;
     let zombie = Zombie.new(0, 0);
     let zombies = Array.new(totalZombiesCount);
     let zombies[0] = zombie;
     return;
   }

   method void dispose() {
      do hero.dispose();
      do zombies.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method void itFollows() {
     var Zombie thisZombie;
     var int zombiesNumber;
     let zombiesNumber = 0;

     while (zombiesNumber < totalZombiesCount) {
       if (zombies[zombiesNumber] > 0) {
         let thisZombie = zombies[zombiesNumber];

         if (hero.getXAxis() > thisZombie.getXAxis()) { do thisZombie.moveRight(); }
         if (hero.getXAxis() < thisZombie.getXAxis()) { do thisZombie.moveLeft(); }
         if (hero.getYAxis() > thisZombie.getYAxis()) { do thisZombie.moveDown(); }
         if (hero.getYAxis() < thisZombie.getYAxis()) { do thisZombie.moveUp(); }
       }
       let zombiesNumber = zombiesNumber + 1;
     }

     return;
   }

   method boolean checkZombieAttack() {
     var Zombie thisZombie;
     var int zombiesNumber;
     let zombiesNumber = 0;

     while (zombiesNumber < totalZombiesCount) {
       if (zombies[zombiesNumber] > 0) {
         let thisZombie = zombies[zombiesNumber];
         if(thisZombie.getYAxis() = hero.getYAxis()) {
           if(thisZombie.getXAxis() = hero.getXAxis()) {
             return true;
           }
         }
       }
       let zombiesNumber = zombiesNumber + 1;
     }
     return false;
   }

   method void pewPew() {
     var Zombie thisZombie;
     var int zombiesNumber;
     let zombiesNumber = 0;

     if(bullet = 0) { return; }

     while (zombiesNumber < totalZombiesCount) {
       if (zombies[zombiesNumber] > 0) {
         let thisZombie = zombies[zombiesNumber];
         if (bullet.getXAxis() = thisZombie.getXAxis()) {
           if (bullet.getYAxis() = thisZombie.getYAxis()) {
             do bullet.dispose();
             do thisZombie.dispose();
             let bullet = 0;
             let zombies[zombiesNumber] = 0;
             return;
           }
         }
       }

       let zombiesNumber = zombiesNumber + 1;
     }

     do bullet.move();
     return;
   }

   method void moveHero() {
     if (heroDirection = 0) { return; }

     if (heroDirection = 1) {
       let heroLatestDirection = heroDirection;
       do hero.moveUp();
     }
     if (heroDirection = 2) {
       let heroLatestDirection = heroDirection;
       do hero.moveDown();
     }
     if (heroDirection = 3) {
       let heroLatestDirection = heroDirection;
       do hero.moveRight();
     }
     if (heroDirection = 4) {
       let heroLatestDirection = heroDirection;
       do hero.moveLeft();
     }

     return;
   }

   method void run() {
      var char key;
      var boolean exit;
      let exit = false;

      while (~exit) {
        let key = Keyboard.keyPressed();

         if (key = 0) { // 0 by default at the beginning of the program
           let heroDirection = 0;
           let key = Keyboard.keyPressed();
         }
         if (key = 131) {
           let heroDirection = 1;
           let key = Keyboard.keyPressed();
         }
         if (key = 133) {
           let heroDirection = 2;
           let key = Keyboard.keyPressed();
         }
         if (key = 132) {
           let heroDirection = 3;
           let key = Keyboard.keyPressed();
         }
         if (key = 130) {
           let heroDirection = 4;
           let key = Keyboard.keyPressed();
         }
         if (key = 32) {
           if (shootInterval > 250) {
               let shootInterval = 0;
           } else {
               if (shootInterval = 0) {
                 let bullet = Bullet.new(hero.getXAxis(), hero.getYAxis(), heroLatestDirection);
               }
               let shootInterval = shootInterval + 1;
           }
         }

         if (zombieFloatInterval > 500) {
             let zombieFloatInterval = 0;
         } else {
             if (zombieFloatInterval = 0) {
               do itFollows();
             }
             let zombieFloatInterval = zombieFloatInterval + 1;
         }

         if (heroFloatInterval > 200) {
             let heroFloatInterval = 0;
         } else {
             if (heroFloatInterval = 0) {
               do moveHero();
             }
             let heroFloatInterval = heroFloatInterval + 1;
         }

         if (bulletFloatInterval > 10) {
             let bulletFloatInterval = 0;
         } else {
             if (bulletFloatInterval = 0) {
               do pewPew();
             }
             let bulletFloatInterval = bulletFloatInterval + 1;
         }

         let exit = checkZombieAttack();
     }

     do Screen.clearScreen();
     do Output.printString("GAME OVER SUCKER !");
     return;
   }
}
