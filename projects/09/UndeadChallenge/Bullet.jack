class Bullet {
   field int x;
   field int y;
   field int direction;

   constructor Bullet new(int xStart, int yStart, int direction) {
     let x = xStart;
     let y = yStart;

     do Output.printString("> bullet ");
     do Output.printInt(x);
     do Output.printString("/");
     do Output.printInt(y);
     do Output.printString(" bullet <");

     if (direction = 1) { do shootUp(); }
     if (direction = 2) { do shootDown(); }
     if (direction = 3) { do shootRight(); }
     if (direction = 4) { do shootLeft(); }

     return this;
   }

   method void dispose() {
     do Memory.deAlloc(this);
     return;
   }

   method void shootUp() {
     let y = y - 16;
     if (y > 0) { do drawUpOrDown(); }
     return;
   }

   method void shootDown() {
     let y = y + 16;
     if (y < 240) { do drawUpOrDown(); }
     return;
   }

   method void shootRight() {
     let x = x + 16;
     if (x > 0) { do drawLeftOrRight(); }
     return;
   }

   method void shootLeft() {
     let x = x - 16;
     if (x < 510) { do drawLeftOrRight(); }
     return;
   }

  method void drawLeftOrRight() {
    var int memAddress;
    let memAddress = 16384 + (x/16) + (y*32);
    do Memory.poke(memAddress+0, 0);
  	do Memory.poke(memAddress+32, 0);
  	do Memory.poke(memAddress+64, 0);
  	do Memory.poke(memAddress+96, 0);
  	do Memory.poke(memAddress+128, 0);
  	do Memory.poke(memAddress+160, 0);
  	do Memory.poke(memAddress+192, 0);
  	do Memory.poke(memAddress+224, 32766);
  	do Memory.poke(memAddress+256, 32766);
  	do Memory.poke(memAddress+288, 0);
  	do Memory.poke(memAddress+320, 0);
  	do Memory.poke(memAddress+352, 0);
  	do Memory.poke(memAddress+384, 0);
  	do Memory.poke(memAddress+416, 0);
  	do Memory.poke(memAddress+448, 0);
  	do Memory.poke(memAddress+480, 0);
    return;
  }

  method void drawUpOrDown() {
    var int memAddress;
    let memAddress = 16384 + (x/16) + (y*32);
    do Memory.poke(memAddress+0, 0);
  	do Memory.poke(memAddress+32, 384);
  	do Memory.poke(memAddress+64, 384);
  	do Memory.poke(memAddress+96, 384);
  	do Memory.poke(memAddress+128, 384);
  	do Memory.poke(memAddress+160, 384);
  	do Memory.poke(memAddress+192, 384);
  	do Memory.poke(memAddress+224, 384);
  	do Memory.poke(memAddress+256, 384);
  	do Memory.poke(memAddress+288, 384);
  	do Memory.poke(memAddress+320, 384);
  	do Memory.poke(memAddress+352, 384);
  	do Memory.poke(memAddress+384, 384);
  	do Memory.poke(memAddress+416, 384);
  	do Memory.poke(memAddress+448, 384);
  	do Memory.poke(memAddress+480, 0);
    return;
  }
}
